version: "3.8"
services:
  elastic:
    container_name: elastic-korpus
    image: elasticsearch:8.6.0
    restart: always
    volumes: 
      - korpus-elastic:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: "-Xms4g -Xmx4g"
    networks:
      recnik:
    healthcheck:
      test: curl -s http://elastic-korpus:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
  mysql:
    container_name: korpus-mysql
    image: mariadb:10.10
    restart: always
    volumes: 
      - korpus-data:/var/lib/mysql
      - korpus-init:/docker-entrypoint-initdb.d
    environment:
      - MARIADB_ROOT_PASSWORD=korpus
      - MARIADB_USER=korpus
      - MARIADB_PASSWORD=korpus
      - MARIADB_DATABASE=korpus
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      recnik:
    healthcheck:
      test: mysqladmin ping -h localhost -u root -pkorpus
      timeout: 20s
      retries: 10
  korpus:
    container_name: korpus
    image: rsj/korpus
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      elastic:
        condition: service_healthy
    volumes:
      - korpus-private:/private
      - korpus-log:/app/log
      - korpus-media:/app/media
      - korpus-export:/app/export
      - ./gsheets-token.json:/app/gsheets-token.json
      - ./gsheets-credentials.json:/app/gsheets-credentials.json
    labels:
      - "traefik.http.routers.korpus.rule=Host(`korpus.rsj.rs`)"
      - traefik.http.routers.korpus.entrypoints=web
      - traefik.http.routers.korpus.middlewares=redirect-to-https@docker
      - "traefik.http.routers.korpus-secured.rule=Host(`korpus.rsj.rs`)"
      - traefik.http.routers.korpus-secured.entrypoints=websecure
      - traefik.http.routers.korpus-secured.tls.certresolver=letsencrypt
      - traefik.http.routers.korpus-secured.tls=true
    networks:
      recnik:
  qcluster:
    container_name: korpus-qcluster
    image: rsj/korpus
    restart: always
    command: qcluster
    depends_on: 
      mysql:
        condition: service_healthy
      elastic:
          condition: service_healthy
    volumes:
      - korpus-private:/private
      - korpus-log:/app/log
      - korpus-media:/app/media
      - korpus-export:/app/export
      - ./gsheets-token.json:/app/gsheets-token.json
      - ./gsheets-credentials.json:/app/gsheets-credentials.json
    networks:
      recnik:
networks:
  recnik:
    external: true
volumes:
  korpus-media:
    name: korpus-media
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './media'
  korpus-data:
    name: korpus-data
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data'
  korpus-init:
    name: korpus-init
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './init'
  korpus-log:
    name: korpus-log
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './log'
  korpus-private:
    name: korpus-private
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './private'
  korpus-elastic:
    name: korpus-elastic
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './elastic'
  korpus-export:
    name: korpus-export
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './export'
